<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 读取属性文件 -->
    <bean id="propertyConfigurer" class="com.tinet.ctilink.util.PropertyUtil">
        <property name="locations">
            <list>
                <value>classpath*:app.properties</value>
                <value>classpath*:quartz.properties</value>
            </list>
        </property>
    </bean>

    <!-- 定义Redis连接池 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="20" />
        <property name="maxIdle" value="20" />
        <property name="minIdle" value="5" />
    </bean>

    <!-- 定义Spring Redis连接工厂 -->
    <bean id="redisConnectionFactory"
          class="com.tinet.ctilink.jedis.CtiLinkJedisConnectionFactory">
        <property name="hostName" value="${redis.url}" />
        <property name="port" value="${redis.port}" />
        <property name="database" value="0" />
        <property name="usePool" value="true" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>

    <bean id="redisTemplate" class="com.tinet.ctilink.cache.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
    </bean>

    <bean id="redisService" class="com.tinet.ctilink.cache.RedisService" />

    <!-- 定义数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 -->
        <property name="url" value="${db.url.task}" />
        <property name="username" value="${db.username.task}" />
        <property name="password" value="${db.password.task}" />

        <!-- 配置连接池的初始化大小、最小值、最大值 -->
        <property name="initialSize" value="${db.initialSize.task}" />
        <property name="minIdle" value="${db.minIdle.task}" />
        <property name="maxActive" value="${db.maxActive.task}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <!-- 配置连接检测的策略，在连接空闲时检测 -->
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="100" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20" />

        <!-- 配置监控统计拦截的filter -->
        <property name="filters" value="stat" />

        <!-- 连接泄漏监测，怀疑存在泄漏时打开 -->
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
    </bean>

    <!-- 注入Spring上下文 -->
    <bean id="contextUtil" class="com.tinet.ctilink.util.ContextUtil" />

    <!-- JMX监控输出 -->
    <context:mbean-export />
    <bean id="redisMonitor" class="com.tinet.ctilink.monitor.RedisMonitor" />
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="Ctilink:type=RedisMonitor,app=task-engine" value-ref="redisMonitor" />
            </map>
        </property>
    </bean>

</beans>